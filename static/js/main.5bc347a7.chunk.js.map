{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","pressedKey","isKeyUp","handlePressedKey","event","setState","key","document","addEventListener","this","removeEventListener","className","React","Component","ReactDOM","render","getElementById"],"mappings":"oNAOaA,EAAb,4MACEC,MAAe,CACbC,WAAY,GACZC,SAAS,GAHb,EAcEC,iBAAmB,SAACC,GAClB,EAAKC,SAAS,CAAEJ,WAAYG,EAAME,IAAKJ,SAAS,KAfpD,uDAME,WACEK,SAASC,iBAAiB,QAASC,KAAKN,oBAP5C,kCAUE,WACEI,SAASG,oBAAoB,QAASD,KAAKN,oBAX/C,oBAkBE,WACE,MAAgCM,KAAKT,MAA7BE,EAAR,EAAQA,QAASD,EAAjB,EAAiBA,WAEjB,OACE,qBAAKU,UAAU,MAAf,SACGT,EACC,oBAAGS,UAAU,eAAb,sCAEGV,EAFH,OAMA,mBAAGU,UAAU,eAAb,2CA9BV,GAAyBC,IAAMC,W,MCF/BC,IAASC,OACP,cAAC,EAAD,IACAR,SAASS,eAAe,W","file":"static/js/main.5bc347a7.chunk.js","sourcesContent":["import React from 'react';\n\ntype State = {\n  pressedKey: string;\n  isKeyUp: boolean;\n};\n\nexport class App extends React.Component {\n  state: State = {\n    pressedKey: '',\n    isKeyUp: false,\n  };\n\n  componentDidMount(): void {\n    document.addEventListener('keyup', this.handlePressedKey);\n  }\n\n  componentWillUnmount(): void {\n    document.removeEventListener('keyup', this.handlePressedKey);\n  }\n\n  handlePressedKey = (event: KeyboardEvent) => {\n    this.setState({ pressedKey: event.key, isKeyUp: true });\n  };\n\n  render() {\n    const { isKeyUp, pressedKey } = this.state;\n\n    return (\n      <div className=\"App\">\n        {isKeyUp ? (\n          <p className=\"App__message\">\n            The last pressed key is [\n            {pressedKey}\n            ]\n          </p>\n        ) : (\n          <p className=\"App__message\">Nothing was pressed yet</p>\n        )}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}